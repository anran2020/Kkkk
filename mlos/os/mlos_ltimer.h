/**
 ******************************************************************************
 * 文件:mlos_ltimer.h(环回定时)
 * 作者:   zzx
 * 版本:   V0.01
 * 日期:     2014-12-01
 * 内容简介:
 *ltimer->loopback timer ,基于正整数环回特性实现的，定时器
 ******************************************************************************
 *  					文件历史
 *
 * 版本号-----  日期   -----   作者    ------   说明
 * v0.1         2014-12-01          zzx                 创建该文件
 *
 *
 *
 ******************************************************************************
 **/

#ifndef _MLOS_LTIMER_H_
#define _MLOS_LTIMER_H_

//---------------------------------------------------------
//inclludes
//---------------------------------------------------------

#include "mlos_dtd.h"
#include "mlos_clock.h"
#include "mlos_malloc.h"



//---------------------------------------------------------
//defines
//---------------------------------------------------------



//---------------------------------------------------------
//loopback timer 环回定时器
//---------------------------------------------------------
typedef struct {

	mlu32 initialTime;//初始时间
	mlu32 period;//周期

}LTimer,*LTimerPtr;


//-----------------------------------------------------------------------------
// 函数名：ltimer_load
//-----------------------------------------------------------------------------
//
// 返回值 : void
// 参数   :  void
//
//
//
//功能描述：
//
//
//修改履历：
//1.zzx ：  2014-12-01  ：创建函数
//
//-----------------------------------------------------------------------------
_inline void ltimer_load(LTimerPtr ptmr,mlu32 ms)
{
	ptmr->period=ms;
}

//-----------------------------------------------------------------------------
// 函数名：
//-----------------------------------------------------------------------------
//
// 返回值 : void
// 参数   :  void
//
//
//
//功能描述：
//
//
//修改履历：
//1.zzx ：  2014-12-01  ：创建函数
//
//-----------------------------------------------------------------------------
_inline void ltimer_start(LTimerPtr ptmr)
{
	ptmr->initialTime=mlos_ms_clock();
}

//-----------------------------------------------------------------------------
// 函数名：
//-----------------------------------------------------------------------------
//
// 返回值 : void
// 参数   :  void
//
//
//
//功能描述：
//
//
//修改履历：
//1.zzx ：  2014-12-01  ：创建函数
//
//-----------------------------------------------------------------------------
_inline void ltimer_load_start(LTimerPtr ptmr,mlu32 ms)
{
	ptmr->initialTime=mlos_ms_clock();
	ptmr->period=ms;
}

//-----------------------------------------------------------------------------
// 函数名：
//-----------------------------------------------------------------------------
//
// 返回值 : void
// 参数   :  void
//
//
//
//功能描述：
//
//
//修改履历：
//1.zzx ：  2014-12-01  ：创建函数
//
//-----------------------------------------------------------------------------
_inline mlu8 ltimer_timeout(LTimerPtr ptmr)
{
	return ((mlos_ms_clock()-ptmr->initialTime)>=ptmr->period);
}

//-----------------------------------------------------------------------------
// 函数名：
//-----------------------------------------------------------------------------
//
// 返回值 : void
// 参数   :  void
//
//
//
//功能描述：
//
//
//修改履历：
//1.zzx ：  2014-12-01  ：创建函数
//
//-----------------------------------------------------------------------------
_inline mlu8 ltimer_is_running(LTimerPtr ptmr)
{
	return (ptmr->period>0);
}

//-----------------------------------------------------------------------------
// 函数名：
//-----------------------------------------------------------------------------
//
// 返回值 : void
// 参数   :  void
//
//
//
//功能描述：
//
//
//修改履历：
//1.zzx ：  2014-12-01  ：创建函数
//
//-----------------------------------------------------------------------------
_inline void ltimer_stop(LTimerPtr ptmr)
{
	ptmr->period=0;
}

//-----------------------------------------------------------------------------
// 函数名：
//-----------------------------------------------------------------------------
//
// 返回值 : void
// 参数   :  void
//
//
//
//功能描述：
//
//
//修改履历：
//1.zzx ：  2014-12-01  ：创建函数
//
//-----------------------------------------------------------------------------
_inline mlu8 ltimer_ticking(LTimerPtr ptmr)
{
	return ((mlos_ms_clock()-ptmr->initialTime)<ptmr->period);
}

//-----------------------------------------------------------------------------
// 函数名：
//-----------------------------------------------------------------------------
//
// 返回值 : void
// 参数   :  void
//
//
//
//功能描述：
//
//
//修改履历：
//1.zzx ：  2014-12-01  ：创建函数
//
//-----------------------------------------------------------------------------
_inline mlu32 ltimer_elapsed(LTimerPtr ptmr)
{
	return (mlos_ms_clock()-ptmr->initialTime);
}


//----------------------------------------------------------------------------
//extern variable
//----------------------------------------------------------------------------



//----------------------------------------------------------------------------
//extern function
//----------------------------------------------------------------------------

LTimerPtr ltimer_create(void);



//----------------------------------------------------------------------------
//							end  of file
//----------------------------------------------------------------------------
#endif //

