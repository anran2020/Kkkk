/**
 ******************************************************************************
 * 文件:mlos_que.h
 * 作者:   zzx
 * 版本:   V0.01
 * 日期:     2014-12-01
 * 内容简介:
 *
 ******************************************************************************
 *  					文件历史
 *
 * 版本号-----  日期   -----   作者    ------   说明
 * v0.1                       2014-12-01          zzx                 创建该文件
 *
 *
 *
 ******************************************************************************
 **/


#ifndef _MLOS_QUE_H_
#define _MLOS_QUE_H_

//---------------------------------------------------------
//inclludes
//---------------------------------------------------------

#include "mlos_dtd.h"
#include "mlos_malloc.h"

//---------------------------------------------------------
//define
//---------------------------------------------------------

//队列数据指针
typedef  void* 	QueDataptr;


//---------------------------------------------------------
//队列，队列元素项
//---------------------------------------------------------

//队列节点数据结构
typedef struct QueNode{

	struct QueNode*pnext;//队列的元素必须在结构体顶部声明此变量，指向下一个元素的指针；
	void *pdata;
	
}QueItem,*QueItemptr;

//---------------------------------------------------------
//队列结构体
//---------------------------------------------------------

typedef struct{

	mlu8 isEmpty;
	mlu8 isfull;
	mlu8 taken;					//标识数据被取用，
	
	mlu32 size;					//队列大小，数据项个数

	QueItemptr head; 			//头，
	QueItemptr tail;			//尾
	
}Que,*Queptr;


//----------------------------------------------------------------------------
//extern variable
//----------------------------------------------------------------------------

//----------------------------------------------------------------------------
//extern maroc
//----------------------------------------------------------------------------


//----------------------------------------------------------------------------
//extern function
//----------------------------------------------------------------------------

Queptr que_create(MemoryType memtype,mlu16 quelen ,mlu32 itemDatSize,mlu8* pItemBuf);
QueDataptr que_en(Queptr pQue);
void que_de(Queptr pQue);
void que_clear(Queptr pQue);
QueDataptr que_take(Queptr pQue);


//----------------------------------------------------------------------------
//							end  of file
//----------------------------------------------------------------------------
#endif // 






